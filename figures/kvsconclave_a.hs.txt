-- sub-choreography: backup may or may not do anything...
handleBackup :: Located '["backup"] (IORef State)
             -> Request
             -> Choreo Participants IO ()
handleBackup state   (Get key)       = pure () -- no-op.
handleBackup state r@(Put key value) = do
    success <- backup `locally` \un -> -- the backup's local work
      handleRequest r (un backup state)
    ack <- (backup, success) `comm` primary  -- send acknowlegement
    pure ()

kvs :: Located '["client"] Request 
    -> Located '["primary"] (IORef State),
    -> Located '["backup"] (IORef State) 
    -> Choreo Participants IO (Located '["client"] Response)
kvs request primaryStateRef backupStateRef = do
  -- send request to the primary node:
  request' <- (client, request) ~> primary @@ nobody
  -- branch on the request:
  broadcast (primary, request') >>= (handleBackup backupStateRef)
  -- process request on the primary node:
  response <- primary `locally` \un ->
    handleRequest (un primary request') (un primary primaryStateRef)
  -- send response to client:
  (primary, response) ~> client @@ nobody
